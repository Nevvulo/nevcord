const { React, contextMenu } = require('ac/webpack');
const { getOwnerInstance, waitFor } = require('ac/util');

let appOwnerInstance;
waitFor('.app')
  .then(() => (
    appOwnerInstance = getOwnerInstance(document.querySelector('.app'))
  ));


module.exports = class ButtonItem extends React.Component {
  onClick () {
    if (this.props.item.disabled) {
      appOwnerInstance.shake();
    } else {
      contextMenu.closeContextMenu();
      this.props.item.onClick();
    }
  }

  render () {
    const button = (
      <div
        class={`item-1Yvehc ${this.props.item.disabled ? 'disabled' : ''}`}
        role='button'
        onClick={this.onClick.bind(this)}
      >
        <span style={{ color: this.props.item.highlight }}>{this.props.item.name}</span>
        <div class='hint-22uc-R'>{this.props.item.hint}</div>
      </div>
    );

    if (this.props.item.seperate) {
      return (
        <div class='itemGroup-1tL0uz seperated'>
          {button}
        </div>
      );
    }

    return button;
  }
}