const { React, contextMenu } = require('powercord/webpack');

const Button = require('./Button.jsx');
const Slider = require('./Slider.jsx');

let ContextMenu;
setImmediate(() => (
  ContextMenu = require('./ContextMenu.jsx')
));

class SubmenuItem extends React.Component {
  constructor () {
    super();

    this.state = {
      hovered: false,
      items: [],
      coords: {
        x: 0,
        y: 0
      }
    };
  }

  onClick ({ target }) {
    if (target.childNodes[0].nodeValue !== this.props.name) {
      return;
    }

    contextMenu.closeContextMenu();
    if (this.props.onClick) {
      this.props.onClick();
    }
  }

  onEnter (event) {
    const { x, y, height } = event.target.getBoundingClientRect();

    this.setState({
      hovered: true,
      coords: {
        x,
        y: y + height + 2
      }
    });
  }

  onLeave () {
    this.setState({
      hovered: false
    });
  }

  async componentDidMount () {
    const items = await this.props.getItems();
    return this.setState({ items });
  }

  render () {
    const submenu = (
      <div
        className='item-1Yvehc itemSubMenu-1vN_Yn'
        onClick={this.onClick.bind(this)}
        onMouseEnter={this.onEnter.bind(this)}
        onMouseLeave={this.onLeave.bind(this)}
      >
        {this.props.name}
        {
          this.state.hovered && this.state.items[0]
            ? this.getSubContextMenu()
            : null
        }
        <div className='hint-22uc-R'>
          {this.props.hint}
        </div>
      </div>
    );

    if (this.props.seperate) {
      return (
        <div className='itemGroup-1tL0uz seperated'>
          {submenu}
        </div>
      );
    }

    return submenu;
  }

  getSubContextMenu () {
    return (
      <ContextMenu
        pageX={this.state.coords.x}
        pageY={this.state.coords.y}
        width={this.props.width || ''}
        itemGroups={[ this.state.items ]}
      />
    );
  }
}

module.exports = SubmenuItem;
