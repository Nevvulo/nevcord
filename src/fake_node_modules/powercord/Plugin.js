const Events = require('events');
const { sleep } = require('powercord/util');

const SettingsManager = require('../../Powercord/settingsManager');

module.exports = class Plugin extends Events {
  constructor () {
    super();

    this.ready = false;
    this.settings = new SettingsManager(this.pluginID);
  }

  async _start () {
    try {
      while (!this.manifest.dependencies.every(pluginName => (
        powercord.pluginManager.get(pluginName).ready
      ))) {
        await sleep(1);
      }

      if (typeof this.start === 'function') {
        await this.start();
      }
      this.ready = true;
      this.log('Plugin started');
    } catch (e) {
      this.error('An error occurred during initialization!', e);
    }
  }

  async loadCSS (path) {
    const styleManager = powercord.pluginManager.get('pc-styleManager');

    while (!styleManager.ready) {
      await sleep(1);
    }

    return styleManager.load(this.constructor.name, path);
  }

  log (...data) {
    console.log(`%c[Powercord:${this.constructor.name}]`, 'color: #257dd4', ...data);
  }

  warn (...data) {
    console.warn(`%c[Powercord:${this.constructor.name}]`, 'color: #257dd4', ...data);
  }

  error (...data) {
    console.error(`%c[Powercord:${this.constructor.name}]`, 'color: #257dd4', ...data);
  }
};
